import React, { useContext, useState } from 'react';
import {
  View,
  Text,
  Image,
  StyleSheet,
  TouchableOpacity,
  TextInput,
  Alert,
  ScrollView
} from 'react-native';
import DropDownPicker from 'react-native-dropdown-picker';
import { useNavigation } from '@react-navigation/native';
import DateTimePickerModal from 'react-native-modal-datetime-picker';
import { AuthContext } from '../../../../context/authContext';
import AsyncStorage from '@react-native-async-storage/async-storage';

function SecondSignup({ route }) {
  // const {email1} = route.params
  // const {password1} = route.params
  const email1 = 'jo';
  const password1 = 'g';
  //global
  const [state] = useContext(AuthContext);
  const { token } = state;

  const navigation = useNavigation();
  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);
  const [open, setOpen] = useState(false);
  const [value, setValue] = useState(null);
  const [items, setItems] = useState([
    { label: 'Male', value: 'Male' },
    { label: 'Female', value: 'Female' },
    { label: 'Other', value: 'Other' },
  ]);

  console.log(`Props email: ${email1}`);

  const [loading, setLoading] = useState(false);
  const [selectedDate, setselectedDate] = useState('');
  const [name, setName] = useState('');
  const [age, setAge] = useState();
  const [mobile, setMobile] = useState();
  const [address, setAddress] = useState('');
  const [occupation, setOccupation] = useState('');
  const [email, setEmail] = useState(email1);
  const [password, setPassword] = useState(password1);

  const showDatePicker = () => {
    setDatePickerVisibility(true);
  };

  const hideDatePicker = () => {
    setDatePickerVisibility(false);
  };

  const handleConfirm = (date) => {
    const dt = new Date(date);
    const x = dt.toISOString().split('T');
    const x1 = x[0].split('-');
    console.log(x1[2] + '/' + x1[1] + '/' + x1[0]);
    setselectedDate(x1[2] + '/' + x1[1] + '/' + x1[0]);
    hideDatePicker();
  };

  const handleRegister = () => {
    try {
      setLoading(true);
      if (!email1 || !password1) {
        Alert.alert('all fields compulsory');
        setLoading(false);
        return;
      }
      setLoading(false);
      registerUser();
      console.log(`Register Data: `, { email1, password1 });
    } catch (error) {
      setLoading(false);
      console.log(error);
    }
  };

  const registerUser = () => {
    let data = {
      email,
      password,
      name,
      age: parseInt(age), // Ensure age is a number
      gender: value,
      mobile,
      address,
      occupation,
      DOB: selectedDate
    };
    fetch('http://192.168.190.191:5000/api/v1/auth/register', {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    })
    .then(response => {
      if (response.ok) {
        // Registration successful, navigate to login page
        console.log(data);
        navigation.navigate("Login");
      } else {
        // Registration failed, show error message from server
        response.json().then(data => {
          Alert.alert('Registration failed', data.message);
        });
      }
    })
    .catch(error => {
      // Network error or other issues
      console.error('Error during registration:', error);
      Alert.alert('Registration failed', 'Please check your network connection and try again.');
    });
  };

  return (
  <ScrollView>
  <View style={{ flex: 1, height: 'auto' }}>
    {/* <View
      style={{
        alignItems: 'flex-end',
        width: '100%',
        position: 'absolute',
      }}>
      <Image
        source={require('../../../../img/icons/assets/LoginSignup/design2.png')}
        style={{ position: 'absolute' }}
      />
    </View> */}
    <View
      style={{
        height: '19%',
        display: 'flex',
        width: '100%',
        justifyContent: 'flex-end',
        backgroundColor:'green'
      }}>
      <TouchableOpacity
        style={styles.overlayImage}
        onPress={() => {
          navigation.push('Welcome');
        }}>
        <Image source={require('../../../../img/icons/assets/LoginSignup/backbutton.png')} />
      </TouchableOpacity>
      <Text
        style={{
          fontSize: 35,
          fontWeight: 'bold',
          paddingLeft: 20,
          color: 'black',
        }}>
        Enter Details
      </Text>
    </View>
      <Text
        style={{
          fontSize: 15,
          paddingLeft: 20,
          color: 'black',
          backgroundColor:'yellow'

        }}>
        Tell us a bit more about Yourself
      </Text>

    <View style={styles.maincontainer}>
      <View
        style={{
          // height: '100%',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          paddingTop: 35,
          backgroundColor:'orange',
          padding: 25
        }}>
        <View style={{margin: 10, width: '100%' }}>
          <TextInput
            style={styles.input}
            placeholder="Name"
            onChangeText={text => { setName(text) }}
            value={name}
            placeholderTextColor={'#676767'} />
        </View>
        <View style={{margin: 10, width: '100%' }}>
          <TextInput
            style={styles.input}
            placeholder="Age"
            onChangeText={text => { setAge(text) }}
            value={age}
            placeholderTextColor={'#676767'} />
        </View>
        <View style={{margin: 10, width: '100%', alignItems:'flex-end', justifyContent:'center' }}>
          <TextInput
            style={styles.input}
            placeholder="D.O.B (DD/MM/YYYY)"
            value={selectedDate}
            onChangeText={text => { setselectedDate(text) }}
            keyboardType="numeric"
            placeholderTextColor={'#676767'} />
          <TouchableOpacity
            style={{ position: 'absolute' }}
            onPress={showDatePicker}>
            <Image
              source={require('../../../../img/icons/assets/LoginSignup/calender.png')}
              style={{
                width: 25,
                height: 25,
                resizeMode: 'contain',
                right: 12,
              }}
            />
          </TouchableOpacity>
        </View>

        <View style={{margin: 10, width: '100%' }}>
          <DropDownPicker
            open={open}
            value={value}
            items={items}
            setOpen={setOpen}
            setValue={setValue}
            setItems={setItems}
            placeholder="Gender"
            style={{
              width: '100%',
              padding: 12,
              borderColor: 'black',
              borderWidth: 1,
              borderRadius: 10,
            }}
            textStyle={{
              fontSize: 16,
              fontWeight: '400',
              color: 'black',
            }}
            placeholderStyle={{
              fontSize: 16,
              fontWeight: '400',
              color: '#676767',
            }}
          />
        </View>
        <View style={{margin: 10, width: '100%' }}>
          <TextInput
            style={styles.input}
            placeholder="Mobile"
            onChangeText={text => { setMobile(text) }}
            value={mobile}
            placeholderTextColor={'#676767'}
            keyboardType="numeric" />
        </View>
        <View style={{margin: 10, width: '100%' }}>
          <TextInput
            style={styles.input}
            placeholder="Occupation"
            onChangeText={text => { setOccupation(text) }}
            value={occupation}
            placeholderTextColor={'#676767'} />
        </View>
        <View style={{margin: 10, width: '100%' }}>
          <TextInput
            style={styles.input}
            placeholder="Residential Address"
            onChangeText={text => { setAddress(text) }}
            value={address}
            placeholderTextColor={'#676767'} />
        </View>
      </View>

      <View
        style={{
          alignItems: 'flex-start',
          width: '100%',
          position: 'absolute',
          bottom: 0,
        }}>
        <Image
          source={require('../../../../img/icons/assets/LoginSignup/design1.png')}
          style={{ position: 'absolute', bottom: 0 }}
        />
      </View>
      <View
        style={{
          height: '15%',
          alignItems: 'flex-end',
          justifyContent: 'flex-end',
          width: '95%',
        }}>
        <TouchableOpacity style={{ width: '50%', justifyContent: 'center', alignItems: "flex-end" }} onPress={handleRegister}>
          <Text style={styles.buttons}>{loading ? 'Signing...' : 'Sign-up'}</Text>
        </TouchableOpacity>
      </View>
    </View>
    <DateTimePickerModal
      isVisible={isDatePickerVisible}
      mode="date"
      onConfirm={handleConfirm}
      onCancel={hideDatePicker}
    />
  </View>
</ScrollView>
  );
}

const styles = StyleSheet.create({
  curvedcontainer: {
    height: '15%',
    width: '100%',
    alignItems: 'center',
  },
  fullscreen: {
    width: 130,
    height: 130,
    borderRadius: 65,
  },
  maincontainer: {
    flex: 1,
    backgroundColor:'pink'
  },
  buttons: {
    fontSize: 25,
    width: '100%',
    fontWeight: 'bold',
    color: 'white',
    backgroundColor: 'black',
    textAlign: 'left',
    padding: 12,
    borderRadius: 100,
    textAlign: 'center'
  },
  overlayImage: {
    position: 'absolute',
    top: 27,
    left: 23,
    width: 30,
    height: 30,
    resizeMode: 'cover',
  },
  input: {
    width: '100%',
    padding: 12,
    borderColor: 'black',
    borderWidth: 1,
    borderRadius: 10,
    fontSize: 16,
    fontWeight: '400',
    color: 'black'
  },
  picker: {
    width: '100%',
    height: 50,
    color: 'grey',
  },
  pickerItem: {
    fontSize: 16,
    fontWeight: '200',
  },
});

export default SecondSignup;
